

@model Tratament.Web.ViewModels.SendRequest.SendRequestViewModel
@using Tratament.Model.Models.Enums

@using Microsoft.Extensions.Options

@{
    ViewBag.Title = "Send Request";
}

<div class="container">

    <form method="post" enctype="multipart/form-data" asp-controller="SendRequest" asp-action="Send" id="sendRequestForm" >

        <div class="mt-3">

            <div class="row">

                <div class="col-sm-5">

                    <div class="row mt-2">
                        <label class="col-sm-4">Tipul prestației</label>
                        <div class="col-sm-8">

                            <select asp-for="@(Model.TicketTypeId)" asp-items="@(ViewBag.TicketTypes)" class="form-control shadow-none" id="tiketType">
                                <option selected value="">Selectați tipul prestației</option>
                            </select>
                            <span asp-validation-for="@(Model.TicketTypeId)" class="text-danger"></span>

                        </div>
                    </div>

                    <div class="row mt-2">
                        <label class="col-sm-4">IDNP benficiarului</label>
                        <div class="col-sm-8">

                            <input type="text" asp-for="@(Model.Idnp)" class="form-control shadow-none" id="Idnp" autocomplete="off" placeholder="IDNP" />
                            <span asp-validation-for="@(Model.Idnp)" class="text-danger"></span>

                        </div>
                    </div>

                    <div class="row mt-2">
                        <label class="col-sm-4">E-mail:</label>
                        <div class="col-sm-8">
                            <input type="text" asp-for="@(Model.Email)" class="form-control shadow-none" id="email" autocomplete="off" placeholder="e-mail" />
                            <span asp-validation-for="@(Model.Email)" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row mt-2">
                        <label class="col-sm-4">Phone</label>
                        <div class="col-sm-8">
                            <input type="text" asp-for="@(Model.Phone)" class="form-control shadow-none" id="phone" autocomplete="off" placeholder="phone" />
                        </div>
                    </div>

                    <hr />

                    <div class="row" id="confirm-error-message" style="display:none">
                        <div class="col-sm-10">
                            <span style="color: red;">Acest cimp este obligator</span>
                        </div>
                    </div>

                    <div class="row" id="verified-data-container">
                        <div class="col-sm-1">
                            <input id="checkBox-verify-data" type="checkbox" name="CheckBoxVerificationData" data-val="true">
                        </div>

                        <div class="col-sm-11">
                            <p style="text-align:justify">
                                Am verificat datele introduse și confirm corectitudinea lor, pe proprie răspundere.
                            </p>
                        </div>
                    </div>

                    <div class="row" id="agree-data-error-message" style="display:none">
                        <div class="col-sm-10">
                            <span style="color: red;">Acest cimp este obligator</span>
                        </div>
                    </div>

                    <div class="row">

                        <div class="col-sm-1" style="display:none" id="agree-data-processing">
                            <input id="checkbox-agree-data-processing" type="checkbox" name="CorrectData" data-val="true">
                        </div>

                        <div class="col-sm-11">

                            <div id="DisabilitiesTicketsConfirm" style="display:none">
                                @await Html.PartialAsync("~/Views/Partials/DataProcessingText_Partial.cshtml", ServiceTypeEnum.Disabilities)
                            </div>

                            <div id="VeteransTicketsConfirm" style="display:none">
                                @await Html.PartialAsync("~/Views/Partials/DataProcessingText_Partial.cshtml", ServiceTypeEnum.Veterans)
                            </div>

                            <div id="CernobilTicketsConfirm" style="display:none">
                                @await Html.PartialAsync("~/Views/Partials/DataProcessingText_Partial.cshtml", ServiceTypeEnum.Cernobil)
                            </div>

                            <div id="PaymentCompensationConfirm" style="display:none">
                                @await Html.PartialAsync("~/Views/Partials/DataProcessingText_Partial.cshtml", ServiceTypeEnum.PaymentCompensation)
                            </div>

                        </div>
                    </div>


                    <div class="row mt-3">
                        <label>Cod de verificare</label>
                        <div class="col-sm-12 mt-2">
                            @await Html.PartialAsync("~/Views/Partials/DntCaptcha_Partial.cshtml")
                        </div>
                    </div>

                    @*<div class="row">
            <div class="col-sm-12">
                @await Html.PartialAsync("~/Views/Partials/Recaptcha_Partial.cshtml")
            </div>
        </div>*@

                    <div class="row mt-2">
                        <div class="col-sm-12">
                            <button type="submit" class="btn btn-primary">Aplică</button>
                        </div>
                    </div>

                </div>

                <div class="col-sm-7">

                    <div id="DisabilitiesTreatmentTickets" style="display:none">
                        @await Html.PartialAsync("~/Views/Partials/UtilText_Partial.cshtml", ServiceTypeEnum.Disabilities)
                    </div>

                    <div id="VeteransTreatmentTickets" style="display:none">
                        @await Html.PartialAsync("~/Views/Partials/UtilText_Partial.cshtml", ServiceTypeEnum.Veterans)
                    </div>

                    <div id="TicketsForCernobil" style="display:none">
                        @await Html.PartialAsync("~/Views/Partials/UtilText_Partial.cshtml", ServiceTypeEnum.Cernobil)
                    </div>

                    <div id="PaymentCompensation" style="display:none">
                        @await Html.PartialAsync("~/Views/Partials/UtilText_Partial.cshtml", ServiceTypeEnum.PaymentCompensation)
                    </div>

                </div>

            </div>

        </div>

    </form>

</div>

<script type="text/javascript">

    const sections = {
        "1": ["DisabilitiesTreatmentTickets", "DisabilitiesTicketsConfirm"],
        "2": ["VeteransTreatmentTickets", "VeteransTicketsConfirm"],
        "3": ["TicketsForCernobil", "CernobilTicketsConfirm"],
        "4": ["PaymentCompensation", "PaymentCompensationConfirm"]
    };

    const ticketTypeDropdown = document.getElementById("tiketType");
    const checkboxAgreeDataProcessing = document.getElementById("checkbox-agree-data-processing");

    const agreeDataErrorMessage = document.getElementById("agree-data-error-message");
    const sendRequestForm = document.getElementById("sendRequestForm");

    const agreeDataProcessing = document.getElementById("agree-data-processing");

    const confirmErrorMessage = document.getElementById("confirm-error-message");
    const checkBoxVerifyData = document.getElementById("checkBox-verify-data");

    ticketTypeDropdown.addEventListener("change", updateDivVisibility);

    function updateDivVisibility() {

        hideUtilDivs();

        toggleConfirmCheckBox(false, null, sections);

        const sectionsById = getSectionsById(ticketTypeDropdown.value);

        showUtilDivs(sectionsById);

        toggleConfirmCheckBox(true, getTicketTypeId(ticketTypeDropdown), sections);
    }

    sendRequestForm.addEventListener("submit", validateCorrectData);

    function validateCorrectData(event) {

        if (!IsElementVisible(checkboxAgreeDataProcessing) && !IsElementVisible(checkBoxVerifyData)) return;

        validateCheckbox(event, checkboxAgreeDataProcessing, agreeDataErrorMessage);
        validateCheckbox(event, checkBoxVerifyData, confirmErrorMessage);
    }

    function validateCheckbox(event, checkbox, errorElement) {

        if (!checkbox.checked) {
            event.preventDefault();
            errorElement.style.display = 'block';

        } else {
            errorElement.style.display = 'none';
        }
    }

    checkBoxVerifyData.addEventListener("change", () => confirmErrorMessage.style.display = "none");
    checkboxAgreeDataProcessing.addEventListener("change", () => agreeDataErrorMessage.style.display = "none");

    function hideUtilDivs() {

        const allDivIds = Object.values(sections).flat();

        allDivIds.forEach(divId => {
            const divElement = document.getElementById(divId);
            if (divElement) {
                divElement.style.display = 'none';
            }
        });
    }

    function showUtilDivs(divIds) {

        divIds.forEach(divId => {
            const divElement = document.getElementById(divId);
            if (divElement) {
                divElement.style.display = 'block';
            }
        });
    }

    function getSectionsById(ticketTypeId) {
        return sections[ticketTypeId] || [];
    }

    function toggleConfirmCheckBox(shouldHide, selectedIndex, sections) {

        if (shouldHide && Object.keys(sections).includes(selectedIndex)) {

            $("#agree-data-processing").show();
            $("#verified-data-container").show();
        }

        else {
            $("#agree-data-processing").hide();
            $("#verified-data-container").hide();
        }
    }

    function getTicketTypeId(ticketTypeDropdown) {
        return ticketTypeDropdown.options[ticketTypeDropdown.selectedIndex].value;
    }

    document.getElementById("DNTCaptchaInputText").addEventListener("input", function () {

        if (this.value.length > 6) {
            this.value = this.value.substring(0, 6);
        }

        var span = document.querySelector('span[data-valmsg-for="DNTCaptchaInputText"]');

        if (span) {
            span.style.display = this.value.trim() ? 'none' : 'inline'; // Hide if input has value, show if empty
        }

    });

    function IsElementVisible(divElement) {

        if ($(divElement).is(':visible')) {
            return true;
        }
        return false;
    }

    window.addEventListener("load", windowLoad);

    function windowLoad() {

        console.log("Window load event; Selected Item Id: " + getTicketTypeId(ticketTypeDropdown));
        updateDivVisibility();
    }

</script>



